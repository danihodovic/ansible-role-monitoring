---
# yamllint disable rule:line-length
prometheus_dir: /opt/prometheus
prometheus_image: prom/prometheus:latest
prometheus_container_name: prometheus
prometheus_retention_period: '365d'
prometheus_config: '{{ lookup("template", "prometheus_default_config.yml") }}'
prometheus_recording_rules: ''
prometheus_alerting_rules: ''
prometheus_docker_networks: []
prometheus_memory: '{{ ansible_memory_mb.real.total * 0.2 }}m'
prometheus_container: {}
prometheus_container_defaults:
  comparisons:
    '*': strict
  image: '{{ prometheus_image }}'
  name: '{{ prometheus_container_name }}'
  restart_policy: unless-stopped
  restart: true
  user: root
  command:
    - '--config.file=/etc/prometheus/prometheus.yml'
    - '--web.external-url={{ alertmanager_url }}'
    - '--web.console.libraries=/usr/share/prometheus/console_libraries'
    - '--web.enable-lifecycle'
    - '--storage.tsdb.path=/prometheus'
    - '--storage.tsdb.retention={{ prometheus_retention_period }}'
  memory: '{{ prometheus_memory }}'
  network_mode: host
  ports:
    - '127.0.0.1:9090:9090'
  volumes:
    - '{{ prometheus_dir }}:/etc/prometheus'
    - '{{ prometheus_dir }}/data/:/prometheus/'

alertmanager_dir: /opt/alertmanager
alertmanager_image: prom/alertmanager:latest
alertmanager_container_name: alertmanager
alertmanager_url: http://alertmanager
alertmanager_config: '{{ lookup("template", "alertmanager_default_config.yml") }}'
alertmanager_docker_networks: []
alertmanager_memory: '{{ ansible_memory_mb.real.total * 0.1 }}m'
alertmanager_port: '9093'
alertmanager_container: {}
alertmanager_container_defaults:
  comparisons:
    '*': strict
  image: '{{ alertmanager_image }}'
  name: '{{ alertmanager_container_name }}'
  restart_policy: unless-stopped
  restart: true
  network_mode: host
  user: root
  memory: '{{ alertmanager_memory }}'
  command:
    - '--config.file=/etc/alertmanager/alertmanager.yml'
    - '--web.external-url={{ alertmanager_url }}'
  volumes:
    - '{{ alertmanager_dir }}:/etc/alertmanager'
    - '{{ alertmanager_dir }}/data:/alertmanager'

grafana_dir: /opt/grafana
grafana_data_dir: '{{ grafana_dir }}/data'
grafana_provisioning_dir: '{{ grafana_dir }}/provisioning'
grafana_image: grafana/grafana:latest
grafana_container_name: grafana
grafana_memory: '{{ ansible_memory_mb.real.total * 0.2 }}m'
grafana_data_sources: |
  apiVersion: 1
  datasources:
    - name: Prometheus
      type: prometheus
      isDefault: true
      access: proxy
      url: http://{{ prometheus_container_name }}:9090

    - name: Loki
      type: loki
      access: proxy
      url: http://{{ loki_container_name }}:{{ loki_port }}
grafana_container: {}
grafana_container_defaults:
  comparisons:
    '*': strict
  image: '{{ grafana_image }}'
  name: '{{ grafana_container_name }}'
  state: started
  restart: true
  restart_policy: unless-stopped
  user: root
  memory: '{{ grafana_memory }}'
  network_mode: host
  env:
    GF_SERVER_HTTP_PORT: '9099'
    GF_SERVER_HTTP_ENABLE_GZIP: 'true'
    GF_DATABASE_TYPE: 'sqlite3'
    GF_DATABASE_PATH: '/var/lib/grafana/grafana.sqlite3'
    GF_SESSION_COOKIE_SECURE: 'true'
    GF_SESSION_SESSION_LIFE_TIME: '2592000'  # 1 month
  volumes:
    - '{{ grafana_data_dir }}:/var/lib/grafana'
    - '{{ grafana_provisioning_dir }}:/etc/grafana/provisioning'

loki_dir: /opt/loki
loki_address: '127.0.0.1'
loki_port: '9098'
loki_image: grafana/loki:latest
loki_container_name: loki
loki_config: '{{ lookup("template", "loki_config.yml") }}'
loki_memory: '{{ ansible_memory_mb.real.total * 0.1 }}m'
loki_container: {}
loki_container_defaults:
  comparisons:
    '*': strict
  image: '{{ loki_image }}'
  name: '{{ loki_container_name }}'
  user: root
  command: '-config.file={{ loki_dir }}/config.yml'
  restart: true
  restart_policy: unless-stopped
  network_mode: host
  memory: '{{ loki_memory }}'
  volumes:
    - '{{ loki_dir }}:{{ loki_dir }}'

blackbox_dir: /opt/blackbox
blackbox_docker_networks: []
blackbox_image: prom/blackbox-exporter
blackbox_container_name: blackbox
blackbox_port: 9115
blackbox_config: '{{ lookup("file", "blackbox_default_config.yml") }}'
blackbox_memory: '{{ ansible_memory_mb.real.total * 0.05 }}m'
blackbox_container: {}
blackbox_container_defaults:
  comparisons:
    '*': strict
  image: '{{ blackbox_image }}'
  name: '{{ blackbox_container_name }}'
  user: root
  command: [--config.file=/etc/blackbox_exporter/config.yml]
  # yamllint disable-line rule:line-length
  network_mode: host
  volumes:
    - '{{ blackbox_dir }}:/etc/blackbox_exporter'
  memory: '{{ ansible_memory_mb.real.total * 0.2 }}m'
